import serial
import Smart_Shopper_Lib_Tester as SSL
import Apriori_for_Smart_Shopper as AS
arduino_milk = serial.Serial('COM4', 9600, timeout=.5)
arduino_grape = serial.Serial('COM5', 9600, timeout=.5)
def readRFID():
	c=1
	while True:
		if c == 1:
			print "Waiting for input from Arduino..."
		c = c+1
		if data = arduino_milk.readline()[:-2] #the last bit gets rid of the new-line chars
			item = 'Milk'
		else if data = arduino_grape.readline()[:-2]:
			item = 'Jam'
		rfid_id = data[:12]
		added = 0
		if rfid_id:
			try :
				con, cursor = SSL.establish_conn()
				cust_id = SSL.detect_rfid_tag(rfid_id, cursor)
				
				print "--------------------------------------------------------"
				print "Customer ID = ",
				print cust_id
				print "RFID Tag = ",
				print rfid_id
				print "Item detected : " + item
				print "                ------"
				try :
#					SSL.display_items_bought(cust_id, cursor)
					if SSL.check_item(cust_id, item, cursor):
						print "Adding Item"
						if SSL.add_item_to_cart(cust_id, item, cursor) :
							con.commit()
							added = 1
							print item + " added to Cart"
						else :
							print "Error. Item not added. "
					else :
						print "Item already in cart"
						if SSL.remove_item_from_cart(cust_id, item, cursor) :
							con.commit()
							added = 0
							print item + " deleted from cart"
						else :
							print "Error. Item not removed"

				except :
					print "something went wrong with adding or removing"
			except :
				print "Wrong"
			print "                ------"
			if added :
				try :
					AS.Apriori()
				except :
					print "error in Apriori"
				try :
					sugg_item = SSL.find_suggestion(item, cursor)
					print "Item Bought : " + item
					for s_item in sugg_item:
						print "Item Suggested : " + s_item[0]
				except :
					print "Error in Suggestion"
			print "--------------------------------------------------------"
			c=1

if __name__ == '__main__':
	readRFID()
